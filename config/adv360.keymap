
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &kp EQUAL              &kp N1      &kp N2     &kp N3     &kp N4         &kp N5                  &none                                                                               &none     &kp N6    &kp N7  &kp N8         &kp N9          &kp N0   &kp MINUS
     &kp TAB  &mt SCROLLLOCK ESC       &kp P      &kp Y      &kp C          &kp B                  &none                                                                               &none      &kp V     &kp M   &kp U          &kp Z  &kp APOSTROPHE    &kp BSLH
       &kp Q               &kp A       &kp N      &kp I      &kp S          &kp F               &kp LALT     &mo 2         &to 0                      &mo 3           &mo 2         &kp RALT      &kp D     &kp T   &kp H          &kp O           &kp R       &kp L
 &key_repeat           &kp COMMA  &kp PERIOD      &kp J      &kp G  &kp SEMICOLON                                      &kp LCTRL                   &kp LALT                                   &kp ENTER     &kp W   &kp K  &kp BACKSPACE           &kp X       &none
       &none           &kp GRAVE   &kp PG_DN  &kp PG_UP  &kp RIGHT                           &mt LSHFT E  &kp LALT  &kp LEFT_WIN                  &kp RSHFT  &mt LALT ENTER  &mt RCTRL SPACE             &kp LEFT  &kp UP       &kp DOWN       &kp RIGHT  &caps_word
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                 &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                                 &kp HOME                  &kp PG_UP                         &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &trans   &trans   &trans   &trans   &trans   &trans             &none                                                   &none   &trans   &trans   &trans   &trans   &trans  &trans
 &trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15             &none                                                   &none  &kp F16  &kp F17  &kp F18  &kp F19  &kp F20  &trans
 &trans   &kp F1   &kp F2   &kp F3   &kp F4   &kp F5             &none  &trans  &trans                  &trans  &trans   &none   &kp F6   &kp F7   &kp F8   &kp F9  &kp F10  &trans
 &trans  &kp F21  &kp F22  &kp F23  &kp F24   &trans                            &trans                  &trans                   &trans   &trans   &trans   &trans   &trans  &trans
 &trans   &trans   &trans   &trans   &trans                     &trans  &trans  &trans                  &trans  &trans  &trans            &trans   &trans   &trans   &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_leftH {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
